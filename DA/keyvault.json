{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
      "type": "string",
      "defaultValue": "testing-kv-deploy"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "objectID": {
      "type": "string",
      "defaultValue": "3f72c783-688d-4a9e-bdf6-dc60b3108393"
    },
    "enabledForDeployment": {
        "type": "string",
        "defaultValue": "false"
        },
    "enabledForTemplateDeployment": {
        "type": "string",
        "defaultValue": "false"
        },
    "enabledForDiskEncryption": {
        "type": "string",
        "defaultValue": "false"
        },
    "secretName": {
      "type": "string",
      "defaultValue": "vmAdminPassword"
    },
      "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for your data factory"
      }
    },
    "secretValue": {
      "type": "securestring","defaultValue": "testing123"
    },
     "networkAcls": {
       "type": "object",
        "defaultValue": {
            "defaultAction": "deny",
            "bypass": "AzureServices"
            
        }
    },
    "privateEndpointName": {
            "type": "string",
            "defaultValue": "test_vault_pe"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "da_vnet"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "pe-us-sharedservices-pe-centralus-vnet01-snet01"
        },
        "groupId": {
            "type": "string",
            "defaultValue": "vault"
        }
        },
  "variables": {"privateDNSZone_name": "privatelink.vaultcore.azure.net"},
   "resources": [
    
        {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "networkAcls": "[parameters('networkAcls')]",
        "accessPolicies": [
          {
            "objectId": "[parameters('objectID')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "contentType": "securestring",
        "value": "[parameters('secretValue')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
            "apiVersion": "2019-04-01",
            "name": "[parameters('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[resourceGroup().Location]",
            "dependsOn": [
                       "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                       "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                    ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                            "groupIds": [
                                "[parameters('groupId')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName') )]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDNSZone_name')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]"
            ],
            "location": "global",
            "tags": {},
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('privateDNSZone_name'), '/', parameters('vnetName'), 'link' )]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_name'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('privateEndpointName'), '/', 'default')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]",
                "[variables('privateDNSZone_name')]"
            ],
            "location": "[resourceGroup().Location]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "kv",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones',variables('privateDNSZone_name'))]"
                        }
                    }
                ]
            }
        }
   ]
}