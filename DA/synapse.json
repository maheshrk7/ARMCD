{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "centralus",
      "metadata": {
        "description": "Location for your deployment."
      }
    },
    "synapse_sql_adls_name": {
      "type": "string",
		"defaultValue": "testsynapse"
    },
    "sparkDeployment": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "'True' deploys an Apache Spark pool as well as a SQL pool. 'False' does not deploy an Apache Spark pool."
      }
    },
    "sparkNodeSize": {
      "type": "string",
      "defaultValue": "Medium",
      "allowedValues": [
        "Small",
        "Medium",
        "Large"
      ],
      "metadata": {
        "description": "This parameter will determine the node size if SparkDeployment is true"
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "defaultValue": "sqlpooladmin",
      "metadata": {
        "description": "The username of the SQL Administrator"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "defaultValue": "synapsetesting@123",
      "metadata": {
        "description": "The password for the SQL Administrator"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "DW100c",
      "metadata": {
        "description": "Select the SKU of the SQL pool."
      }
    },
    "metadataSync": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choose whether you want to synchronise metadata."
      }
    },
    "privateEndpointName": {
            "type": "string",
            "defaultValue": "test_synapse_pe"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "da_vnet"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "pe-us-sharedservices-pe-centralus-vnet01-snet01"
        },
        "groupId": {
            "type": "string",
            "defaultValue": "sql"
        }
  },
  "variables": {
    "synapseName": "[parameters('synapse_sql_adls_name')]",
    "adlsName": "[toLower(concat(variables('synapseName'),'adls001'))]",
    "adlsFsName": "[toLower(concat(variables('synapseName'),'fs001'))]",
    "sqlPoolName": "[toLower(concat(variables('workspaceName'),'pool001'))]",
    "workspaceName": "[toLower(concat(variables('synapseName'),'wsp001'))]",
    "sparkPoolName": "[toLower('synasp001')]",
    "privateDNSZone_name": "privatelink.sql.azuresynapse.net"
  },
  "resources": [
  
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('adlsName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "isHnsEnabled": true,
         "allowBlobPublicAccess": false,
          "allowSharedKeyAccess": false,
          "minimumTlsVersion": "TLS1_2",
          "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "Deny"
          }
      },
      "resources": [
        {
          "name": "[concat('default/', variables('adlsFsName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "dependsOn": [
            "[variables('adlsName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[variables('workspaceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[variables('adlsName')]",
        "[variables('adlsFsName')]"
      ],
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[reference(variables('adlsName')).primaryEndpoints.dfs]",
          "filesystem": "[variables('adlsFsName')]"
        },
        "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "managedVirtualNetwork": "default"
      },
      "resources": [
        {
          
          "type": "firewallrules",
          "apiVersion": "2019-06-01-preview",
          "name": "allowAll",
          "location": "[parameters('location')]",
          "dependsOn": [ "[variables('workspaceName')]" ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        }
        
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sqlPoolName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "dependsOn": [
        "[variables('workspaceName')]"
      ],
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      },
      "resources": [
        {
          "condition": "[parameters('metadataSync')]",
          "type": "metadataSync",
          "apiVersion": "2019-06-01-preview",
          "name": "config",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('sqlPoolName')]"
          ],
          "properties": {
            "Enabled": "[parameters('metadataSync')]"
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('sparkDeployment'),'true')]",
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sparkPoolName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('workspaceName')]"
      ],
      "properties": {
        "nodeCount": 5,
        "nodeSizeFamily": "MemoryOptimized",
        "nodeSize": "[parameters('sparkNodeSize')]",
        "autoScale": {
          "enabled": true,
          "minNodeCount": 3,
          "maxNodeCount": 40
        },
        "autoPause": {
          "enabled": true,
          "delayInMinutes": 15
        },
        "sparkVersion": "2.4"
      }
    },
    {
      "scope": "[concat('Microsoft.Storage/storageAccounts/', variables('adlsName'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(uniqueString(variables('adlsName')))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('workspaceName')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      
            "apiVersion": "2019-04-01",
            "name": "[parameters('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[resourceGroup().Location]",
            "dependsOn": [
                       "[resourceId('Microsoft.Synapse/workspaces', variables('workspaceName'))]"
                    ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', variables('workspaceName'))]",
                            "groupIds": [
                                "[parameters('groupId')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName') )]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDNSZone_name')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]"
            ],
            "location": "global",
            "tags": {},
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('privateDNSZone_name'), '/', parameters('vnetName'), 'link' )]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_name'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('privateEndpointName'), '/', 'default')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]",
                "[variables('privateDNSZone_name')]"
            ],
            "location": "[resourceGroup().Location]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "synapsewsp",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones',variables('privateDNSZone_name'))]"
                        }
                    }
                ]
            }
        }
    
  ]
}