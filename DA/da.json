{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
    "DAVNet": {
      "type": "object",
      "defaultValue": {
        "vNetName": "da_vnet",
        "Prefixes": "10.0.0.0/19",
        "RGName": "testARM",        
        "subnets": [
          {
            "SubnetName": "function-us-da-dev-centralus-vnet01-snet01",
            "Prefixes": "10.0.1.0/24",
            "NetworkSecurityGroup": "fapp_centralus_nsg",
            "UDRName": "da-dev-centralus-vnet-snet01-udr001",
            "NSGRules": [
              {
                "RuleName": "Bastion_Connection",
                "Description": "-",
                "Priority": 100,
                "SourceAddressPrefix": "10.0.0.0/16",
                "DestinationAddressPrefix": "10.0.0.0/16",
                "DestinationPortRange": ["22","3389"],
                "Protocol": "TCP",
                "Access": "Allow",
                "Direction": "Inbound",
                "SourcePortRange": "*"
              },
			    {
			          "RuleName": "ICMP",
                "Description": "-",
                "Priority": 101,
                "SourceAddressPrefix": "*",
                "DestinationAddressPrefix": "*",
                "DestinationPortRange": ["1-65535"],
                "Protocol": "ICMP",
                "Access": "Allow",
                "Direction": "Inbound",
                "SourcePortRange": "*"
				      }
            ]
          },
          {
            "SubnetName": "logicapp-us-da-dev-centralus-vnet01-snet01",
            "Prefixes": "10.0.2.0/23",
            "NetworkSecurityGroup": "lapp_centralus_nsg",
            "UDRName": "da-dev-centralus-vnet-snet01-udr001",
            "NSGRules": [
              {
                "RuleName": "ICMP",
                "Description": "-",
                "Priority": 102,
                "SourceAddressPrefix": "*",
                "DestinationAddressPrefix": "*",
                "DestinationPortRange": ["1-65535"],
                "Protocol": "ICMP",
                "Access": "Allow",
                "Direction": "Inbound",
                "SourcePortRange": "*"
              }
            ]
          },
           {
            "SubnetName": "pe-us-sharedservices-pe-centralus-vnet01-snet01",
            "Prefixes": "10.0.4.0/23",
            "NetworkSecurityGroup": "pe_centralus_nsg",
            "UDRName": "da-dev-centralus-vnet-snet01-udr001",
            "NSGRules": [
              {
                "RuleName": "ICMP",
                "Description": "-",
                "Priority": 102,
                "SourceAddressPrefix": "*",
                "DestinationAddressPrefix": "*",
                "DestinationPortRange": ["1-65535"],
                "Protocol": "ICMP",
                "Access": "Allow",
                "Direction": "Inbound",
                "SourcePortRange": "*"
              }
            ]
          }
        ]
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "myv2datafactory"
    },
    "newOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for your data factory"
      }
    },
    "dataLakeStoreName": {
        "type": "string",
        "defaultValue": "adlstest0075",
        "metadata": {
            "description": "The name of the Data Lake Store account to create."
        }
     },
    "UdrDaVnet": {
      "type": "array",
      "defaultValue":[
            "da-dev-centralus-vnet-snet01-udr001"    
      ]
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "testing-kv-deploy"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "objectID": {
      "type": "string",
      "defaultValue": "3f72c783-688d-4a9e-bdf6-dc60b3108393"
    },
    "enabledForDeployment": {
        "type": "string",
        "defaultValue": "false"
        },
    "enabledForTemplateDeployment": {
        "type": "string",
        "defaultValue": "false"
        },
    "enabledForDiskEncryption": {
        "type": "string",
        "defaultValue": "false"
        },
    "secretName": {
      "type": "string",
      "defaultValue": "vmAdminPassword"
    },
    "secretValue": {
      "type": "securestring","defaultValue": "testing123"
    },
     "networkAcls": {
       "type": "object",
        "defaultValue": {
            "defaultAction": "deny",
            "bypass": "AzureServices"
            
        }
    },
    "privateEndpointName": {
            "type": "string",
            "defaultValue": "test_vault_pe"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "da_vnet"
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "pe-us-sharedservices-pe-centralus-vnet01-snet01"
        },
        "groupId": {
            "type": "string",
            "defaultValue": "vault"
        },
        "adlsprivateEndpointName": {
            "type": "string",
            "defaultValue": "test_adls_pe"
        },
      
        "adlsgroupId": {
            "type": "string",
            "defaultValue": "dfs"
        }
  },
  "variables": {
    "subnets": "[parameters('DAVNet').subnets]",
    "privateDNSZone_name": "privatelink.vaultcore.azure.net",
    "adlsprivateDNSZone_name": "privatelink.dfs.core.windows.net",
        "storageAccountName": "[parameters('dataLakeStoreName')]"
        
  },
  "resources": [
    {
      "condition": "[not(equals(length(variables('subnets')[copyIndex(0)].NSGRules),0))]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('subnets')[copyIndex(0)].NetworkSecurityGroup]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-11-01",
      "copy": {
		"name": "SubnetNSG",
		"count": "[length( variables('subnets') )]",
		"mode": "serial",
		"batchSize": 1
      },
      "properties": {
        "copy": [
          {
            "name": "securityRules",
            "count": "[length(variables('subnets')[copyIndex(0)].NSGRules)]",
            "input": {
              "name": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].RuleName]",
              "properties": {
                "description": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].Description]",
                "protocol": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].Protocol]",
                "sourceAddressPrefix": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].SourceAddressPrefix]",
                "destinationAddressPrefix": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].DestinationAddressPrefix]",
                "access": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].Access]",
                "priority": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].Priority]",
                "direction": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].Direction]",
                "sourcePortRange": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].SourcePortRange]",
                "destinationPortRanges": "[variables('subnets')[copyIndex(0)].NSGRules[copyIndex('securityRules')].DestinationPortRange]"
              }
            }
          }
        ]
      }
    },
    {
		        "type": "Microsoft.Network/routeTables",
            "apiVersion": "2018-10-01",
		        "name": "[parameters('UdrDaVnet')[copyIndex(0)]]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "UDRcreate",
				        "mode": "serial",
						    "batchSize": 1,
                "count": 
                    "[length(parameters('UdrDaVnet'))]"
                    },
		        "properties": {
			          "disableBgpRoutePropagation": false
					}
	},

  {
    "condition": "[equals(parameters('newOrExisting'), 'existing')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "name": "[parameters('DAVNet').vNetName]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "SubnetNSG",
        "UDRcreate"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('DAVNet').Prefixes]"
          ]
        },
        "copy": [
          {
            "name": "subnets",
            "count": "[length(parameters('DAVNet').subnets)]",
            "input": {
              "name": "[parameters('DAVNet').subnets[copyIndex('subnets')].SubnetName]",
              "properties": {
                "addressPrefix": "[parameters('DAVNet').subnets[copyIndex('subnets')].Prefixes]",
                "networkSecurityGroup": {                  
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('DAVNet').subnets[copyIndex('subnets')].NetworkSecurityGroup)]"
                },
                "routeTable": {
                  "id": "[resourceId('Microsoft.Network/routeTables', parameters('DAVNet').subnets[copyIndex('subnets')].UDRName)]"
                },
                "delegations": [
                  {
                    "name": "webapp",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverFarms",
                      "actions": [
                        "Microsoft.Network/virtualNetworks/subnets/action"
                      ]
                    }
                  }
                ]
              }
            }
          }
        ]
      }
  },
    {
      "condition": "[equals(parameters('newOrExisting'), 'existing')]",
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {}
    },
    {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('storageAccountName')]",
            "kind": "StorageV2",
            "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    }
                },
                "isHnsEnabled": true,
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": false,
                "minimumTlsVersion": "TLS1_2",
          "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "Deny"
          }
            }
        }
    ,
{
            "apiVersion": "2019-04-01",
            "name": "[parameters('adlsprivateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[resourceGroup().Location]",
            "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeStoreName'))]"
                    ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('adlsprivateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeStoreName'))]",
                            "groupIds": [
                                "[parameters('adlsgroupId')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName') )]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('adlsprivateDNSZone_name')]",
            "dependsOn": [
                "[parameters('adlsprivateEndpointName')]"
            ],
            "location": "global",
            "tags": {},
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('adlsprivateDNSZone_name'), '/', parameters('vnetName'), 'link' )]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('adlsprivateDNSZone_name'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('adlsprivateEndpointName'), '/', 'default')]",
            "dependsOn": [
                "[parameters('adlsprivateEndpointName')]",
                "[variables('adlsprivateDNSZone_name')]"
            ],
            "location": "[resourceGroup().Location]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "ehubnamespace",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones',variables('adlsprivateDNSZone_name'))]"
                        }
                    }
                ]
            }
        },

    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "networkAcls": "[parameters('networkAcls')]",
        "accessPolicies": [
          {
            "objectId": "[parameters('objectID')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers"
              ]
            }
          }
        ],
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
      "location": "[parameters('location')]",
      "scale": null,
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "contentType": "securestring",
        "value": "[parameters('secretValue')]",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "condition": "[equals(parameters('newOrExisting'), 'existing')]",
            "apiVersion": "2019-04-01",
            "name": "[parameters('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[resourceGroup().Location]",
            "dependsOn": [
                       "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                       "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                    ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                            "groupIds": [
                                "[parameters('groupId')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName') )]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDNSZone_name')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]"
            ],
            "location": "global",
            "tags": {},
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('privateDNSZone_name'), '/', parameters('vnetName'), 'link' )]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZone_name'))]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('privateEndpointName'), '/', 'default')]",
            "dependsOn": [
                "[parameters('privateEndpointName')]",
                "[variables('privateDNSZone_name')]"
            ],
            "location": "[resourceGroup().Location]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "kv",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones',variables('privateDNSZone_name'))]"
                        }
                    }
                ]
            }
        }
    
  ]
}